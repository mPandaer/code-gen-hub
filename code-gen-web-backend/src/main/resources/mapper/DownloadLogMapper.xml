<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pandaer.web.generator.mapper.DownloadLogMapper">

    <resultMap id="BaseResultMap" type="com.pandaer.web.generator.entity.DownloadLog">
            <id property="id" column="id" />
            <result property="generatorId" column="generator_id" />
            <result property="userId" column="user_id" />
            <result property="clientIp" column="client_ip" />
            <result property="deviceType" column="device_type" />
            <result property="createTime" column="create_time" />
    </resultMap>

    <sql id="Base_Column_List">
        id,generator_id,user_id,client_ip,device_type,create_time
    </sql>

    <select id="selectDailyStats" resultType="com.pandaer.web.statistic.dto.resp.DailyDownloadVO">
        SELECT
            DATE(create_time) AS date,
            COUNT(*) AS downloadCount,
            COUNT(DISTINCT user_id) AS uniqueUserCount
        FROM download_log
        WHERE create_time BETWEEN #{startTime} AND #{endTime}
        GROUP BY DATE(create_time)
        ORDER BY date ASC
    </select>



    <select id="selectGeneratorStats" resultType="com.pandaer.web.generator.dto.resp.GeneratorDownloadVO">
        select download_log.generator_id as generatorId,generator.name as generatorName,
               count(download_log.id) as downloadCount from download_log
        left join generator on download_log.generator_id = generator.id
        group by download_log.generator_id order by downloadCount desc limit #{count};
    </select>



    <select id="selectDailyRegisterUserStats" resultType="com.pandaer.web.statistic.dto.resp.DailyRegisterUserVO">
        SELECT
            DATE(createTime) AS `date`,
            COUNT(id) AS newUserCount
        FROM user
        WHERE createTime BETWEEN #{startTime} AND #{endTime}
        GROUP BY DATE(createTime)
        ORDER BY date ASC
    </select>
</mapper>
